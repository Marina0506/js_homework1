1)'number' + 3 + 3
Лівосоціативна операція. Конкотенація рядків 
Якщо'number'-string 
Результат: number33
Якщо 'number'-5 Конкотенації рядків не має
Результат: 533


2)null + 3
Лівосоціативна операція.
null-порожність, тобто відсутність значення
Результат:3


3)5 && "qwerty"
Результат "qwerty" оскільки останнім у виразі стоїть рядок, виводиться рядок;



4) +'40' + +'2' + "hillel";
Лівосоціативна операція.Конкотенація рядків 
+ перед '40' перетворює string '40' в число 40
+ перед '2' перетворює string '2' в число 2
"hillel"-string
Результат 42hillel


5)'10' - 5 === 6;
Лівосоціативна операція.
'10'-текст
10-перевелося до числа 10
10-5=5
Оператором строгої рівності === перевіряємо чи дорівнює 5 та 6 один одному
Результат: false



6)true + false
Лівосоціативна операція. Конкотенації рядків не має
Маємо 2 Boolean, де
true=1
false=0
Результат:1



7)'4px' - 3
Лівосоціативна операція. Конкотенації рядків не має
'4px'- не переводиться в число через символи px
Ми не можемо '4px' відняти 3
Результат: NaN-нічому не дорівнює


8)'4' - 3
Лівосоціативна операція. 
'4'-текст
4-перевелося до числа 4
Результат: 1


9)'6' + 3 ** 0;
Правосоціативна операція. 
Спочатку виконується виведення в ступінь 
3 ** 0
Отримуємо 3 в 0 ступінь, будь-яке число в 0 ступіні = 1
Конкотенація рядків
'6' + 1
Результат: 61



10)12 / '6'
Лівосоціативна операція
12-число
6-текст
6-перевелося до числа 6
12 ділимо на 6
Результат: 2




11)'10' + (5 === 6);
Лівосоціативна операція.Конкотенація рядків 
'10'-текст
10-перевелося до числа 10
В дужках (5 === 6) Оператором строгої рівності === чи дорівнює 5 та 6 один одному
5 не дорівнює 6, Отримуємо false
10+false
Реезультат: 10false



12)null == ''
Лівосоціативна операція
null-вказує на відсутність значення
''-це пуста строка, вона не зводиться до типу null
Пуста строка не дорівнює null
Результат: false


13)3 ** (9 / 3);
Перша дія ділення (9 / 3) = 3
Друга дія зведення у ступінь 3**3;*/
Результат: 27;


14)!!'false' == !!'true'
!!'false'= true- ! конвертує непустий рядок у true, далі !true буде false, а !false буде true;
!!'true' = true, далі !true буде false, а !false буде true;
true == true
Результат:true


15)0 || '0' && 1
Оператор && має вищий пріоритет, тому виконається першим вираз '0' && 1; 
'0' - це не порожній рядок, тому булевий еквівалент - true;
1 це true;
Оператор && повертає останнє значення, якщо всі операнди true, результатом виразу '0' && 1 буде 1;
Наступним буде вираз 0 | 1;
Оператор |= true, 0 це false, а 1 це true, то повернеться 1;
Результат:1


16)(+null == false) < 1;
Перша дія над виразом (+null == false);
+ намагається привести все до числа, якщо операнд таким не є, то результатом +null буде 0;
false також як число 0;
0 == 0 = true;
наступна дія порівняння true <1
true=1
Результат: false


17)false && true || true
Дія false && true, оператор  "і"  перевіряє та повертає перше false, тому результатом у цьому виразі буде false;
false || true,оскільки оператор "або" повертає перше true, то результатом буде true
Результат: true

18)false && (false || true);
Перша дія в дужка false || true,оскільки оператор "або" повертає перше true, то результатом буде true
Дія false && true, оператор && повертає false, якщо хоча б один з операнд дорівнює false, тому у виразі результатом буде false;
Результат:false

19)(+null == false) < 1 ** 5;
Перша дія (+null == false) "+" намагається привести все до числа, якщо операнд таким не є, то результатом +null буде 0;
false = 0; 0 == 0 = true;
далі зводимо 1 до ступеня 5,  результат буде 1;
Отримали вираз true < 1
true=1, 1не може бути меньше/бульше 1
Результат: false;